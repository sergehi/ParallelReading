Примеры
См. пример кода для ExitCode свойства .
Комментарии
WaitForExit(Int32) заставляет текущий поток ждать завершения связанного процесса. Он должен вызываться после вызова всех остальных методов в процессе. Чтобы избежать блокировки текущего потока, используйте событие Exited.
Этот метод указывает компоненту Process ждать завершения процесса в течение ограниченного времени. Если связанный процесс не завершается к концу интервала, так как запрос на завершение отклоняется, false возвращается вызывающей процедуре. Можно указать Timeout.Infinite для milliseconds, и Process.WaitForExit(Int32) будет вести себя так же, как перегрузка WaitForExit() . Если передать 0 (ноль) в метод, он возвращается true только в том случае, если процесс уже завершился; в противном случае он немедленно возвращает .false
 Примечание
В платформа .NET Framework 3.5 и более ранних версиях, если milliseconds значение было -1, перегрузка WaitForExit(Int32) ждала MaxValue миллисекунд (приблизительно 24 дня), а не бесконечно.
Если стандартные выходные данные были перенаправлены в асинхронные обработчики событий, возможно, обработка выходных данных не будет завершена при возврате этого метода. Чтобы убедиться, что асинхронная обработка событий завершена, вызовите перегрузку WaitForExit() , которая не принимает параметр после получения true от этой перегрузки . Чтобы обеспечить правильную обработку Exited события в Windows Forms приложениях, задайте SynchronizingObject свойство .